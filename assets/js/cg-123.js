(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{423:function(t,r,e){"use strict";e.r(r);var a=e(7),s=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《并发设计模式》第55章-流水线模式-基于流水线模式优化实时统计交易额功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《并发设计模式》第55章-流水线模式-基于流水线模式优化实时统计交易额功能"}},[t._v("#")]),t._v(" 《并发设计模式》第55章-流水线模式-基于流水线模式优化实时统计交易额功能")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★★☆☆☆")]),t._v(" "),r("li",[t._v("本章重点：了解流水线模式的核心原理与使用场景，初步掌握流水线模式的应用场景，能够初步结合自身项目实际场景思考如何将流水线模式灵活应用到自身实际项目中。")])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("通过读取日志数据来实现实时分析统计交易额的功能时，将实时读取日志文件到得出最终的结果数据，都写到一个业务方法中，性能是比较低的。从业务角度分析，可以将通过读取日志数据来实现实时分析统计交易额的功能通过流水线模式分为：读取日志、分割日志、分析统计和推送大屏等几个步骤，并且不同流水线的各个步骤之间可以并行执行任务，这样能够极大的提升整体的执行效率。")]),t._v(" "),r("h2",{attrs:{id:"一、故事背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、故事背景"}},[t._v("#")]),t._v(" 一、故事背景")]),t._v(" "),r("p",[t._v("小菜在开发实时统计社区电商系统交易额的功能时，看似一个非常简单的功能，但是开发完成后，提交测试反馈的结果是性能太差。但是目前以小菜的功力无法独立解决性能差的问题。在老王的指导下，小菜明白了性能差的原因，也知道了解决这种场景问题的最佳方案是流水行模式。")]),t._v(" "),r("p",[t._v("在老王的指导下，小菜也知晓了到底什么是流水线模式，但是真要是自己在项目中实现流水线模式，还是有点困难的，毕竟没有流水线模式的真实项目经验。于是，小菜还是找到老王，让老王为其讲讲如何基于流水线模式优化试试统计交易额的功能。老王这个大好人，不仅为小菜讲解了如何基于流水线模式优化实时统计交易额的功能，更是将流水线的通用代码封装成了通用的框架类源码。")]),t._v(" "),r("h2",{attrs:{id:"二、流程对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、流程对比"}},[t._v("#")]),t._v(" 二、流程对比")]),t._v(" "),r("p",[t._v("优化前，按照小菜实现的流程如图55-1所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/assets/images/core/concurrent/2023-11-11-001.png?raw=true",width:"80%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，优化前将读取日志、分割日志、分析统计和推送大屏的逻辑，都写到了同一个方法中，每个步骤之间都是串行执行的，读取日志后，才能对日志进行分割，分割完日志，才能进行分析统计，分析统计完才能推送到交易大屏。整个方法只有将当前结果数据推送到交易大屏后，才能读取下一批日志。由此可知，整体的执行性能是多么差。")]),t._v(" "),r("p",[t._v("基于流水线模式优化后的流程如图55-2所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/assets/images/core/concurrent/2023-11-11-002.png?raw=true",width:"80%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，基于流水线模式优化后，可以将一个大的任务分解成若干个不同的处理阶段，每个处理阶段的输出结果数据作为下一个处理阶段的输入，并且每个阶段都会有对应的工作线程执行相应的任务和计算。所以，使用流水线处理任务时，每个任务的各个处理阶段是并行的。这种并行任务处理和计算，能够充分利用系统的CPU资源，提供任务处理和计算的效率。")]),t._v(" "),r("h2",{attrs:{id:"三、类结构设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、类结构设计"}},[t._v("#")]),t._v(" 三、类结构设计")]),t._v(" "),r("p",[t._v("对比前程序优化前后的流程后，我们在正式写代码之前，还需要对相关的类进行设计，类图如图55-3所示。")]),t._v(" "),r("h2",{attrs:{id:"查看全文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看全文"}},[t._v("#")]),t._v(" 查看全文")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章与完整代码")])])}),[],!1,null,null,null);r.default=s.exports}}]);