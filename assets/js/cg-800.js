(window.webpackJsonp=window.webpackJsonp||[]).push([[800],{1133:function(t,r,e){"use strict";e.r(r);var a=e(15),s=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《高性能polaris网关》核心启动器-第02节-核心启动加载流程的设计与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》核心启动器-第02节-核心启动加载流程的设计与实现"}},[t._v("#")]),t._v(" 《高性能Polaris网关》核心启动器-第02节：核心启动加载流程的设计与实现")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本节难度：★★☆☆☆")]),t._v(" "),r("li",[t._v("本节重点：对网关的核心启动加载流程进行设计与实现，深入理解高性能Polaris网关启动流程的设计与实现。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")])]),t._v(" "),r("p",[t._v("在网关的整体架构设计中，在设计通用处理器时，我们设计了BatchEvent模式的缓冲队列和MPMC模式的缓冲队列，为后续设计和实现BatchEvent模式的处理器和MPMC模式的处理器打下了良好的基础。")]),t._v(" "),r("p",[t._v("目前，已经实现了在BatchEvent模式缓冲队列的基础上基于自定义SPI扩展实现BatchEvent模式处理器和MPMC模式处理器。在HTTP处理器篇章，我们已经对HTTP处理器的核心接口、服务端处理器和连接管理器进行了设计与实现，并且基于Netty对网关的服务端和客户端进行了设计与实现。")]),t._v(" "),r("p",[t._v("至此，实现了通过处理器驱动过滤器链的核心功能，在过滤器链中会对请求做各种过滤处理。那这里又会存在这样一个问题：网关启动时是如何加载和驱动这些处理器和过滤器链的执行的呢？带着这些问题，我们就需要对网关的启动流程进行设计和实现。")]),t._v(" "),r("h2",{attrs:{id:"一、背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、背景"}},[t._v("#")]),t._v(" 一、背景")]),t._v(" "),r("p",[t._v("在网关的处理器设计中，我们重点设计和实现了通用处理器接口，基于Netty实现了核心处理器的功能，并且基于BatchEvent和MPMC两种模式实现了缓冲队列。在实现缓冲队列时，重点参考了JDK的队列实现，并且在JDK队列实现的基础上，做了进一步优化。所以，各位小伙伴们在学习自定义缓冲队列时，可以结合JDK的Queue接口及其实现类等深入学习和理解。")]),t._v(" "),r("p",[t._v("目前，已经实现了在BatchEvent模式缓冲队列的基础上基于自定义SPI扩展实现BatchEvent模式处理器和MPMC模式处理器。")]),t._v(" "),r("p",[t._v("在高性能Polaris网关的设计中，整体对外提供HTTP协议、RPC协议和WebSocket协议，也就是说，其他服务或者客户端可以通过HTTP协议、RPC协议和WebSocket协议访问网关。在HTTP处理器篇章，我们已经对HTTP处理器的核心接口、服务端核心处理器与连接管理器进行了设计与实现，并且基于Netty对网关的服务端和客户端进行了设计与实现。")]),t._v(" "),r("p",[t._v("随后，对网关的核心启动容器类进行了设计。接下来，就对网关的核心启动加载流程进行设计和实现。")]),t._v(" "),r("h2",{attrs:{id:"二、本节重点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、本节重点"}},[t._v("#")]),t._v(" 二、本节重点")]),t._v(" "),r("p",[t._v("对网关的核心启动加载流程进行设计与实现，深入理解高性能Polaris网关启动流程的设计与实现。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")]),t._v(" "),r("h2",{attrs:{id:"三、核心类设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、核心类设计"}},[t._v("#")]),t._v(" 三、核心类设计")]),t._v(" "),r("p",[t._v("网关的核心启动加载流程的类图如图2-1所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2025-07-16-001.png?raw=true",width:"70%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，在网关的核心启动加载流程设计中，Starter类是网关的核心启动类，由Starter类驱动网关的启动流程。")]),t._v(" "),r("p",[r("strong",[t._v("注意：这里重点给大家展示网关的核心启动流程，其他代码的实现细节，大家可以自行到本节对应的源码分支进行查看，这里不再赘述。")])]),t._v(" "),r("h2",{attrs:{id:"四、编码实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、编码实现"}},[t._v("#")]),t._v(" 四、编码实现")]),t._v(" "),r("p",[t._v("本节，就对网关的核心启动容器类进行编码实现，其他代码的实现细节，大家可以自行到本节对应的源码分支进行查看，这里不再赘述。")]),t._v(" "),r("p",[r("strong",[t._v("（1）实现配置加载器")])]),t._v(" "),r("p",[t._v("在实现启动类之前，需要对网关核心配置的加载器进行设计和实现，网关的核心配置加载器主要设计了网关核心配置的加载流程。同时，也定义了加载配置的优先级，优先级由高到低：运行参数 ->  jvm参数  -> 环境变量  -> 配置文件  -> PolarisConfig对象的默认属性值。")]),t._v(" "),r("p",[t._v("源码详见：polaris-context工程下的io.binghe.polaris.context.loader.PolarisConfigLoader。")]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);r.default=s.exports}}]);