(window.webpackJsonp=window.webpackJsonp||[]).push([[776],{1108:function(t,r,e){"use strict";e.r(r);var a=e(14),v=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《高性能polaris网关》通用模型-第05节-调用链路顶层接口的实现类设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》通用模型-第05节-调用链路顶层接口的实现类设计"}},[t._v("#")]),t._v(" 《高性能Polaris网关》通用模型-第05节：调用链路顶层接口的实现类设计")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★★☆☆☆")]),t._v(" "),r("li",[t._v("本节重点：对高性能Polaris网关的调用链路的顶层接口实现类进行设计，从全局角度掌握高性能Polaris网关整体调用链路的核心链路设计。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("从开始设计网关项目时，就明确了一个核心要点：那就是网关必须是高性能的。所以，在网关的整体设计和实现过程中，会仅仅围绕着如何进行架构设计，如何编码才能在设计和编码阶段使得网关的性能达到最优化。另外，在网关压测阶段，还会对网关的性能进行调优。")]),t._v(" "),r("h2",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("p",[t._v("在前面的章节中，已经对高性能Polaris网关的请求与响应模型的顶层接口进行了设计，对请求模型和响应模型的顶层接口进行了实现，随后对调用链路的顶层接口与抽象类进行了设计。接下来，就对调用链路的顶层接口实现类进行设计。")]),t._v(" "),r("h2",{attrs:{id:"二、本节诉求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、本节诉求"}},[t._v("#")]),t._v(" 二、本节诉求")]),t._v(" "),r("p",[t._v("对高性能Polaris网关的调用链路的顶层接口实现类进行设计，从全局角度掌握高性能Polaris网关整体调用链路的核心链路设计。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")]),t._v(" "),r("h2",{attrs:{id:"三、顶层实现类设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、顶层实现类设计"}},[t._v("#")]),t._v(" 三、顶层实现类设计")]),t._v(" "),r("p",[t._v("调用链路顶层接口实现类设计如图5-1所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2024-09-23-001.png?raw=true",width:"70%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，在设计顶层实现类时，我们会为AbstractServiceInvoker类设计三个实现类，分别为HttpServiceInvoker类、RpcServiceInvoker类和WebSocketServiceInvoker类。其中，HttpServiceInvoker类是调用HTTP服务的类，RpcServiceInvoker类是调用RPC服务的类，WebSocketServiceInvoker类是调用WebSocket服务的类。")]),t._v(" "),r("h2",{attrs:{id:"四、编码实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、编码实现"}},[t._v("#")]),t._v(" 四、编码实现")]),t._v(" "),r("p",[t._v("接下来，就对调用链路顶层接口的实现类进行编码实现。")]),t._v(" "),r("p",[r("strong",[t._v("（1）实现HttpServiceInvoker类")])]),t._v(" "),r("p",[t._v("HttpServiceInvoker类是调用HTTP服务的类。")]),t._v(" "),r("p",[t._v("源码详见：polaris-context工程下的io.binghe.polaris.context.invoker.HttpServiceInvoker。")]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);r.default=v.exports}}]);