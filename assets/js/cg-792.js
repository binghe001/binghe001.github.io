(window.webpackJsonp=window.webpackJsonp||[]).push([[792],{1123:function(t,r,e){"use strict";e.r(r);var a=e(15),s=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《高性能polaris网关》通用模型-第06节-网关配置规则模型实现类设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》通用模型-第06节-网关配置规则模型实现类设计"}},[t._v("#")]),t._v(" 《高性能Polaris网关》通用模型-第06节：网关配置规则模型实现类设计")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★★☆☆☆")]),t._v(" "),r("li",[t._v("本节重点：对高性能Polaris网关的配置规则模型实现类进行设计，从全局角度掌握高性能Polaris网关配置规则的设计。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("网关的规则是可配置的，也就是说，最终我们自己手写的网关规则是可通过配置中心进行配置和管理的，并且在配置中心修改对应的规则后，程序会立即生效。所以，需要对高性能Polaris网关的配置规则模型类进行设计，以便满足网关的可视化配置需求。")]),t._v(" "),r("h2",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("p",[t._v("在前面的章节中，已经对高性能Polaris网关的请求与响应模型的顶层接口进行了设计，对请求模型和响应模型的顶层接口进行了实现，对调用链路的顶层接口与抽象类进行了设计，并且对调用链路的顶层接口实现类进行了设计。接下来，我们就对网关配置模型的实现类进行设计。")]),t._v(" "),r("h2",{attrs:{id:"二、本节诉求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、本节诉求"}},[t._v("#")]),t._v(" 二、本节诉求")]),t._v(" "),r("p",[t._v("对高性能Polaris网关的配置规则模型实现类进行设计，从全局角度掌握高性能Polaris网关配置规则的设计。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")]),t._v(" "),r("h2",{attrs:{id:"三、规则模型类设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、规则模型类设计"}},[t._v("#")]),t._v(" 三、规则模型类设计")]),t._v(" "),r("p",[t._v("网关配置规则模型实现类设计如图6-1所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2024-09-24-001.png?raw=true",width:"70%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，在设计网关的配置类时，我们将其抽象出FilterRule和Rule两个类。")]),t._v(" "),r("ul",[r("li",[t._v("FilterRule：网关过滤规则，主要是针对网关接口级别、实例级别、服务级别的过滤规则，提供两个核心字段，一个是id，一个是config。\n"),r("ul",[r("li",[t._v("id：过滤规则id，唯一标识过滤规则。")]),t._v(" "),r("li",[t._v("config：过滤规则配置项内容，json格式的具体配置内容。")])])]),t._v(" "),r("li",[t._v("Rule：Rule类是网关规则配置类，封装网关的核心配置规则，后续会将Rule类封装的数据配置到配置中心，主要包含如下核心字段：\n"),r("ul",[r("li",[t._v("id：规则配置id，唯一标识规则配置。")]),t._v(" "),r("li",[t._v("name： 规则的名称，自定义的名称。")]),t._v(" "),r("li",[t._v("protocol：规则的协议，例如：http、rpc、websocket等。")]),t._v(" "),r("li",[t._v("serviceId：后端服务的id。")]),t._v(" "),r("li",[t._v("prefix：请求的path前缀，例如/api/user/*")]),t._v(" "),r("li",[t._v("paths：接口的集合。")]),t._v(" "),r("li",[t._v("order：排序的规则，网关会根据order进行排序，按先后顺序执行规则。")]),t._v(" "),r("li",[t._v("filterRules：网关过滤规则列表。")])])])]),t._v(" "),r("h2",{attrs:{id:"四、编码实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、编码实现"}},[t._v("#")]),t._v(" 四、编码实现")]),t._v(" "),r("p",[t._v("接下来，就对网关配置规则模型实现类进行编码实现。")]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);r.default=s.exports}}]);