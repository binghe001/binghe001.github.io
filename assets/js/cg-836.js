(window.webpackJsonp=window.webpackJsonp||[]).push([[836],{1170:function(t,e,r){"use strict";r.r(e);var s=r(15),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"《高性能polaris网关》注册中心-第04节-基于自定义spi扩展实现etcd注册中心-作业篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》注册中心-第04节-基于自定义spi扩展实现etcd注册中心-作业篇"}},[t._v("#")]),t._v(" 《高性能Polaris网关》注册中心-第04节：基于自定义SPI扩展实现Etcd注册中心(作业篇)")]),t._v(" "),e("p",[t._v("作者：冰河\n"),e("br"),t._v("星球："),e("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),e("OutboundLink")],1),t._v(" "),e("br"),t._v("博客："),e("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),e("OutboundLink")],1),t._v(" "),e("br"),t._v("文章汇总："),e("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),e("OutboundLink")],1),t._v(" "),e("br"),t._v("源码获取地址："),e("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),e("ul",[e("li",[t._v("本节难度：★★★☆☆")]),t._v(" "),e("li",[t._v("本节重点：给小伙伴们留的作业：基于自定义SPI扩展实现Etcd注册中心，代码框架已搭建好，小伙伴们只需实现核心逻辑即可，深入理解高性能Polaris网关注册中心的设计与实现。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")])]),t._v(" "),e("p",[t._v("截止到目前，我们已经完成了网关最基础和最核心的功能，也对通过网关访问后端服务进行了实现。如何让网关自动发现后端服务呢？这就需要网关实现一套通用的服务注册与发现逻辑。在注册中心篇章，已经对注册中心的通用SPI接口进行了设计与定义，也基于SPI扩展实现了Nacos注册中心和Zookeeper注册中心，接下来，就给小伙伴们留个作业：基于SPI扩展实现Etcd注册中心。")]),t._v(" "),e("h2",{attrs:{id:"一、背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、背景"}},[t._v("#")]),t._v(" 一、背景")]),t._v(" "),e("p",[t._v("截止到目前，我们已经实现了网关的最基础与最核心的功能，主要包括：需求设计、总体架构设计、环境搭建、通用模型设计与实现、基于自定义SPI设计与实现通用过滤器、高性能BatchEvent模式与MPMC模式缓冲队列通用处理器的设计与实现、HTTP核心处理器的设计与实现和网关核心启动容器的设计与实现。")]),t._v(" "),e("p",[t._v("为了能够让网关自动发现后端服务，我们已经对注册中心的通用SPI接口进行了设计与定义，也基于SPI扩展实现了Nacos注册中心和Zookeeper注册中心，接下来，就给小伙伴们留个作业：基于SPI扩展实现Etcd注册中心。")]),t._v(" "),e("h2",{attrs:{id:"二、本节重点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、本节重点"}},[t._v("#")]),t._v(" 二、本节重点")]),t._v(" "),e("p",[t._v("给小伙伴们留的作业：基于自定义SPI扩展实现Etcd注册中心，代码框架已搭建好，小伙伴们只需实现核心逻辑即可，深入理解高性能Polaris网关注册中心的设计与实现。重点掌握整体调用链路的设计思路和设计方法，并能够将其灵活应用到自身实际项目中。")]),t._v(" "),e("h2",{attrs:{id:"三、核心类设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、核心类设计"}},[t._v("#")]),t._v(" 三、核心类设计")]),t._v(" "),e("p",[t._v("基于自定义SPI扩展实现Etcd注册中心的类图如图4-1所示。")]),t._v(" "),e("div",{attrs:{align:"center"}},[e("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2025-07-21-001.png?raw=true",width:"70%"}}),t._v(" "),e("br")]),t._v(" "),e("p",[t._v("可以看到，在高性能Polaris网关中，EtcdRegistryService类是基于自定义SPI扩展实现Etcd注册中心的核心实现类，EtcdRegistryService类会实现RegistryService接口，并实现RegistryService接口中定义的方法。同时，在EtcdRegistryService类中会通过监听器监听服务发现拉取到的服务定义信息和服务实例列表，将其放入对应的缓存。")]),t._v(" "),e("p",[e("strong",[t._v("注意：基于自定义SPI扩展实现Etcd注册中心是给小伙伴们留的作业，本节的源码分支搭建了基于自定义SPI扩展实现Etcd注册中心的核心代码框架，大家可以基于这个代码框架实现基于Etcd注册中心的服务注册、服务反注册和服务发现等逻辑。")])]),t._v(" "),e("h2",{attrs:{id:"四、编码实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、编码实现"}},[t._v("#")]),t._v(" 四、编码实现")]),t._v(" "),e("p",[t._v("本节，就对网关基于自定义SPI扩展实现Etcd注册中心的核心代码框架进行编码实现，小伙伴们可基于代码框架实现Etcd注册中心")]),t._v(" "),e("p",[e("strong",[t._v("（1）实现EtcdRegistryService类")])]),t._v(" "),e("p",[t._v("EtcdRegistryService类是基于自定义SPI扩展实现Etcd注册中心的核心实现类，EtcdRegistryService类会实现RegistryService接口，并实现RegistryService接口中定义的方法。")]),t._v(" "),e("p",[t._v("源码详见：polaris-register-etcd工程下的io.binghe.polaris.register.etcd.EtcdRegistryService。")]),t._v(" "),e("h2",{attrs:{id:"查看完整文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),e("p",[t._v("加入"),e("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),e("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);e.default=a.exports}}]);