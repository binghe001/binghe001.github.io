(window.webpackJsonp=window.webpackJsonp||[]).push([[767],{1100:function(t,r,_){"use strict";_.r(r);var v=_(15),a=Object(v.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《高性能polaris网关》需求设计-第03节-高性能polaris网关需求与流程梳理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》需求设计-第03节-高性能polaris网关需求与流程梳理"}},[t._v("#")]),t._v(" 《高性能Polaris网关》需求设计-第03节：高性能Polaris网关需求与流程梳理")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("课程视频："),r("a",{attrs:{href:"https://t.zsxq.com/W7xj6",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/W7xj6"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★★☆☆☆")]),t._v(" "),r("li",[t._v("本章重点：做一件事情时，我们需要先明确做什么事情，然后才是怎么做这件事情。在正式设计和研发Polaris网关之前，要梳理好Polaris网关的需求与流程。本节，我们就一起梳理下Polaris网关的需求与流程。")]),t._v(" "),r("li",[t._v("课程视频："),r("a",{attrs:{href:"https://t.zsxq.com/W7xj6",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/W7xj6"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("无论是开发中间件项目，还是业务系统，不管是架构师，还是研发人员接到任务后，第一时间不是进行系统设计，更不是一开始就干代码，而是要先好好梳理下系统的需求与业务流程，任何技术最终都是要服务于业务。正所谓磨刀不误砍柴工，今天就来梳理下Polaris网关的需求和流程。")]),t._v(" "),r("h2",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("p",[t._v("相信很多小伙伴对API网关都不陌生了，无论是互联网大厂，还是中小型公司，多多少少都会在自己的系统架构设计中引入API网关。可以这么说，API网关已经成为系统架构设计中不可或缺的重要组成部分。作为技术人员，在正式架构设计和编码实现一款高性能的API网关之前，我们需要明确API网关的核心需求与实现流程。")]),t._v(" "),r("h2",{attrs:{id:"二、本节诉求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、本节诉求"}},[t._v("#")]),t._v(" 二、本节诉求")]),t._v(" "),r("p",[t._v("研发人员接收到任务后，切记不要一上来就干代码，不然中途你多多少少都会遇到这种情况：开发到中途，突然卡卡壳，不知道接下来的需求和业务是什么了，也不知道如何继续向下开发了。或者开发到中途时，发现自己对需求和业务的理解有偏差，再回过头来梳理需求和业务流程，得不偿失。如果自己做的功能与需求不符，可能还要将之前开发的功能推倒重来，最终做了很多无用功，浪费时间和精力。")]),t._v(" "),r("p",[t._v("在正式设计和研发高性能Polaris网关之前，从技术人员的角度梳理下高性能网关的需求和业务流程。")]),t._v(" "),r("h2",{attrs:{id:"三、需求描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、需求描述"}},[t._v("#")]),t._v(" 三、需求描述")]),t._v(" "),r("p",[t._v("API Gateway是一种专门设计用于管理、控制、保护和转换API流量的服务器软件或服务，封装了内部系统的架构，为微服务系统中的所有服务提供统一的API入口点。客户端的所有请求首先到达API Gateway，然后由它将请求路由到适当的服务。在客户端看来，API Gateway就是整个系统的唯一入口，客户端只需要与API Gateway进行交互，而无需关心后端服务的具体实现和部署情况。除了路由功能，API Gateway还负责执行一些常见的任务，如认证、授权、限流、监控、日志记录等。")]),t._v(" "),r("p",[t._v("在分析高性能Polaris网关的需求时，我们可以从功能性需求和非功能性需求两个方面考虑。")]),t._v(" "),r("h3",{attrs:{id:"_3-1-功能性需求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-功能性需求"}},[t._v("#")]),t._v(" 3.1 功能性需求")]),t._v(" "),r("p",[t._v("对于高性能Polaris网关来说，要对标成熟的API网关实现各项功能，总体如图3-1所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2024-06-30-001.png?raw=true",width:"70%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[r("strong",[t._v("（1）路由和转发")])]),t._v(" "),r("p",[t._v("接收来自客户端的请求，并根据预定义的路由规则将请求转发到相应的后端服务或微服务。这种路由功能可以基于请求的路径、方法、头部信息等进行配置。")]),t._v(" "),r("p",[r("strong",[t._v("（2）协议转换")])]),t._v(" "),r("p",[t._v("将来自客户端的请求从一种协议转换为另一种协议，例如将HTTP请求转换为HTTPS请求，或者将REST请求转换为SOAP请求，将HTTP请求转换成RPC或者WebSocket请求等。")]),t._v(" "),r("p",[r("strong",[t._v("（3）请求和响应转换")])]),t._v(" "),r("p",[t._v("对请求和响应的内容进行转换，例如修改请求和响应的头部信息、参数重命名、请求体的转换、响应体的格式化等。")]),t._v(" "),r("p",[r("strong",[t._v("（4）安全认证和授权")])]),t._v(" "),r("p",[t._v("对客户端进行身份验证，并根据预先定义的访问控制策略对请求进行授权。这可以包括基于令牌、API密钥、OAuth等机制的认证和授权。")]),t._v(" "),r("p",[r("strong",[t._v("（5）灰度发布和版本管理")])]),t._v(" "),r("p",[t._v("支持灰度发布和版本管理，使开发人员可以逐步发布新版本的API，并控制不同版本之间的流量分配。")]),t._v(" "),r("p",[r("strong",[t._v("（6）服务注册与发现")])]),t._v(" "),r("p",[t._v("与服务发现和注册中心集成，动态地发现和注册后端服务的地址和可用性信息，以实现自动化的负载均衡和故障恢复。")]),t._v(" "),r("p",[r("strong",[t._v("（7）多协议支持")])]),t._v(" "),r("p",[t._v("支持多种协议，如HTTP、HTTPS、WebSocket、RPC等，可以处理不同类型的请求和响应，并与各种类型的客户端和后端服务进行通信。")]),t._v(" "),r("p",[r("strong",[t._v("（8）流控与配额管理")])]),t._v(" "),r("p",[t._v("实施流量限制和配额管理策略，限制每个用户或每个应用程序的访问频率和使用配额，防止恶意用户或异常情况导致的过度访问和资源浪费。")]),t._v(" "),r("p",[r("strong",[t._v("（9）多环境支持")])]),t._v(" "),r("p",[t._v("支持多个环境（如开发环境、测试环境、生产环境等）的部署和管理，可以在不同的环境中灵活配置和管理API网关实例，满足不同环境的需求和要求。")]),t._v(" "),r("p",[r("strong",[t._v("（10）流量控制")])]),t._v(" "),r("p",[t._v("实施流量控制策略，包括限制请求的速率、配额管理、访问频率限制等，以防止过度使用或滥用API资源。")]),t._v(" "),r("p",[r("strong",[t._v("（11）监控和日志记录")])]),t._v(" "),r("p",[t._v("记录请求和响应的详细信息，包括请求来源、目标服务、处理时间、错误状态等，并生成日志以供监控、故障排除和审计请求使用。")]),t._v(" "),r("p",[r("strong",[t._v("（12）缓存请求与响应")])]),t._v(" "),r("p",[t._v("缓存经常请求的数据或响应，以减少对后端服务的请求，提高性能并减少延迟。")]),t._v(" "),r("p",[r("strong",[t._v("（13）负载均衡")])]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);r.default=a.exports}}]);