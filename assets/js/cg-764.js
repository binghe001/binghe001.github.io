(window.webpackJsonp=window.webpackJsonp||[]).push([[764],{1068:function(t,r,_){"use strict";_.r(r);var v=_(8),s=Object(v.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《高性能polaris网关》需求设计-第02节-高性能polaris网关的目标与挑战"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》需求设计-第02节-高性能polaris网关的目标与挑战"}},[t._v("#")]),t._v(" 《高性能Polaris网关》需求设计-第02节：高性能Polaris网关的目标与挑战")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("课程视频："),r("a",{attrs:{href:"https://t.zsxq.com/5kNlg",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/5kNlg"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★★☆☆☆")]),t._v(" "),r("li",[t._v("本章重点：简单介绍建设高性能网关的目标和应对的技术挑战，针对过程中的挑战给出简单的应对策略，具体的技术方案、架构设计和落地编码实现等，会在设计和研发高性能Polaris网关的具体章节中给出具体的技术方案、架构设计和落地编码实现。")]),t._v(" "),r("li",[t._v("课程视频："),r("a",{attrs:{href:"https://t.zsxq.com/5kNlg",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/5kNlg"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("有句话叫做“磨刀不误砍柴工”，在正式设计和研发高性能Polaris网关之前，我们一定要先明确好高性能Polaris网关要实现的目标，并且需要知晓设计和研发高性能Polaris网关存在哪些技术挑战。")]),t._v(" "),r("h2",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("p",[t._v("随着互联网技术的发展，微服务架构在软件开发中变得越来越普遍。API网关作为微服务架构中的关键组件，是现代微服务架构中不可或缺的一部分。通过API网关，企业可以管理、保护和优化其API流量，从而提升系统的可扩展性、安全性和性能。可以这么说，API网关扮演着流量管理、服务治理、安全防护等多重角色。然而，API网关在实现其目标的过程中，也面临着种种挑战。")]),t._v(" "),r("h2",{attrs:{id:"二、本节诉求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、本节诉求"}},[t._v("#")]),t._v(" 二、本节诉求")]),t._v(" "),r("p",[t._v("简单介绍建设高性能网关的目标和应对的技术挑战，针对过程中的挑战给出简单的应对策略，具体的技术方案、架构设计和落地编码实现等，会在设计和研发高性能Polaris网关的具体章节中给出具体的技术方案、架构设计和落地编码实现。")]),t._v(" "),r("h2",{attrs:{id:"三、主要目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、主要目标"}},[t._v("#")]),t._v(" 三、主要目标")]),t._v(" "),r("p",[t._v("网关承担着所有接口的访问流量，所以，我们设计和研发的网关一定要支撑高并发流量，并且一定要是高性能的。在正式设计和实现高性能Polaris网关之前，我们先来梳理下设计和实现高性能Polaris网关的目标。")]),t._v(" "),r("p",[t._v("总体上来说，我们可以从 "),r("strong",[t._v("流量管理、服务治理、安全防护、监控与观测、简化客户端代码")]),t._v(" 几方面来简单概述设计和实现高性能Polaris网关要实现的主要目标。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2024-06-23-001.png?raw=true",width:"70%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[r("strong",[t._v("（1）流量管理")])]),t._v(" "),r("p",[t._v("流量管理是API网关的核心功能之一，旨在高效地分配和控制来自客户端的请求流量，确保后端服务能够稳定运行。主要包括以下几个方面：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("负载均衡")]),t._v("：将客户端请求均匀地分配到多个后端服务实例上，提高系统的可用性和响应速度。")]),t._v(" "),r("li",[r("strong",[t._v("限流")]),t._v("：通过限制特定时间窗口内的请求数量，防止突发流量对系统造成冲击，保障服务的稳定性。")]),t._v(" "),r("li",[r("strong",[t._v("排队机制")]),t._v("：在流量过大时，将请求进行排队处理，避免系统过载。")])]),t._v(" "),r("p",[r("strong",[t._v("（2）服务治理")])]),t._v(" "),r("p",[t._v("API网关需要具备强大的服务治理能力，以确保微服务之间的调用顺畅且可控。具体包括：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("服务发现")]),t._v("：通过服务注册中心（如Nacos、Etcd等）动态发现并路由请求到相应的服务实例。")]),t._v(" "),r("li",[r("strong",[t._v("熔断机制")]),t._v("：在服务出现异常时，自动停止对该服务的请求，避免故障扩散。熔断器在服务恢复后逐步释放流量。")]),t._v(" "),r("li",[r("strong",[t._v("降级处理")]),t._v("：在服务不可用或响应过慢时，提供备用响应或简化服务，提升系统的鲁棒性。")])]),t._v(" "),r("p",[r("strong",[t._v("（3）安全防护")])]),t._v(" "),r("p",[t._v("API网关必须具备完善的安全策略，以保护系统免受各种安全威胁。主要包括：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("认证与授权")]),t._v("：通过OAuth2.0、JWT等机制实现用户身份验证和权限控制，确保只有合法用户才能访问资源。")]),t._v(" "),r("li",[r("strong",[t._v("数据加密")]),t._v("：通过TLS/SSL等技术加密数据传输，保护数据的机密性和完整性。")]),t._v(" "),r("li",[r("strong",[t._v("防火墙与IP过滤")]),t._v("：设置防火墙规则和IP白名单，阻止非法访问和恶意攻击。")]),t._v(" "),r("li",[r("strong",[t._v("黑白名单：")]),t._v(" 能够按照一定的规则（例如用户id、客户端IP、设备号、地域等）设置黑白名单规则。")])]),t._v(" "),r("p",[r("strong",[t._v("（4）监控与观测")])]),t._v(" "),r("p",[t._v("为了实时掌握系统运行状态，API网关需要具备强大的监控与观测能力，主要包括：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("日志收集与分析")]),t._v("：集中收集和存储日志数据，支持通过ELK Stack（Elasticsearch、Logstash、Kibana）等进行分析和故障排查。")]),t._v(" "),r("li",[r("strong",[t._v("性能指标监控")]),t._v("：通过Prometheus等工具收集关键性能指标（如QPS、延迟、错误率），在Grafana仪表盘中实时展示和分析。")]),t._v(" "),r("li",[r("strong",[t._v("分布式追踪")]),t._v("：使用分布式追踪系统（如Jaeger、Zipkin等）跟踪请求在各个微服务之间的流转情况，帮助诊断性能瓶颈和故障点。")])]),t._v(" "),r("p",[r("strong",[t._v("（5）简化客户端代码")])]),t._v(" "),r("p",[t._v("API网关可以为客户端提供统一的入口，隐藏后端服务的复杂性，简化客户端代码，主要包括：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("API聚合")]),t._v("：将多个后端服务的API聚合为一个接口，减少客户端的调用次数和复杂度。")]),t._v(" "),r("li",[r("strong",[t._v("协议转换")]),t._v("：支持不同协议（如HTTP、gRPC、WebSocke等t）的转换，提供更灵活的调用方式。")])]),t._v(" "),r("h2",{attrs:{id:"三、存在的挑战"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、存在的挑战"}},[t._v("#")]),t._v(" 三、存在的挑战")]),t._v(" "),r("p",[t._v("了解了简单高性能网关的主要目标后，我们再来看看建设高性能网关存在哪些技术挑战。总体上，可以从 "),r("strong",[t._v("性能优化、服务治理的复杂性、安全漏洞、监控与观测的全面性以及易用性与扩展性")]),t._v(" 几个方面对存在的挑战进行说明。")]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);r.default=s.exports}}]);