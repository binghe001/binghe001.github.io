(window.webpackJsonp=window.webpackJsonp||[]).push([[898],{1200:function(t,r,e){"use strict";e.r(r);var a=e(8),s=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《seckill秒杀系统》第30章-分布式锁通用代码设计与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《seckill秒杀系统》第30章-分布式锁通用代码设计与实现"}},[t._v("#")]),t._v(" 《Seckill秒杀系统》第30章：分布式锁通用代码设计与实现")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("课程视频："),r("a",{attrs:{href:"https://t.zsxq.com/12pv5HXCc",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/12pv5HXCc"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★★★☆☆")]),t._v(" "),r("li",[t._v("本章重点：基于Redisson实现分布式锁的通用代码设计，使代码满足需求的同时，兼具优雅性，并具备良好的性能与扩展性。")]),t._v(" "),r("li",[t._v("课程视频："),r("a",{attrs:{href:"https://t.zsxq.com/12pv5HXCc",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/12pv5HXCc"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("编写优雅且兼具扩展性与性能的代码需要具备扎实的编程功底，但这也是对一个程序员最基本的要求。优雅且兼具扩展性与性能的代码不仅让人看上去比较舒服，并且其良好的扩展性有助于后期的维护和升级，记得雷布斯曾经说过：我不是诗人，但我写的代码像诗一样优雅。")]),t._v(" "),r("h2",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("p",[t._v("在某种程度上，代码能够反映出一个程序员的编程功底，甚至是一个程序员的技术水平。能够编写优雅且兼具扩展性与性能代码的程序员比只顾CRUD，只会造“屎山”的程序员更受企业欢迎，所以，作为程序员的我们平时就需要培养自身扎实的编程功底和良好的代码编写能力。")]),t._v(" "),r("h2",{attrs:{id:"二、本章诉求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、本章诉求"}},[t._v("#")]),t._v(" 二、本章诉求")]),t._v(" "),r("p",[t._v("如果一个单体应用系统中某些关键业务只能让一个线程执行，此时可以使用synchronized锁或者Lock锁实现。但是synchronized锁或者Lock锁只能解决单体应用系统下线程的互斥问题，在分布式系统场景下，synchronized锁或者Lock锁就显得力不从心了，此时，就需要使用分布式锁来解决相应的问题。")]),t._v(" "),r("p",[t._v("本章，就从代码层面基于Redisson实现具备良好扩展性的分布式锁。")]),t._v(" "),r("h2",{attrs:{id:"三、代码设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、代码设计"}},[t._v("#")]),t._v(" 三、代码设计")]),t._v(" "),r("p",[t._v("在设计分布式锁的代码时，将会从代码场景、代码扩展性和代码类结构等方面进行详细的说明。")]),t._v(" "),r("h3",{attrs:{id:"_3-1-代码场景设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-代码场景设计"}},[t._v("#")]),t._v(" 3.1 代码场景设计")]),t._v(" "),r("p",[t._v("如果分布式系统中存在受保护的临界区资源，并且在同一时刻只能有一个线程对这些临界区资源进行变更操作，在这种场景下，Java中提供的synchronized锁或者Lock锁是无能为力的，此时就需要使用分布式锁来解决相应的问题。在分布式场景下，无论存在多少个应用服务，亦或是存在多少个系统实例，只要是这些应用服务或者系统实例需要互斥的更新临界区资源，使用分布式锁都能够实现在同一时刻只能有一个线程变更临界区资源，如图30-1所示。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/seckill/scekill-2023-06-07-001.png?raw=true",width:"80%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，在分布式场景下，对临界区资源进行变更时，使用分布式锁能够实现在同一时刻只能有一个线程变更临界区资源，此时，变更临界区资源是线程安全的，不会由于多个线程同时变更临界区资源而造成线程安全的问题。")]),t._v(" "),r("h3",{attrs:{id:"_3-2-代码扩展性设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-代码扩展性设计"}},[t._v("#")]),t._v(" 3.2 代码扩展性设计")]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章与完整代码")])])}),[],!1,null,null,null);r.default=s.exports}}]);