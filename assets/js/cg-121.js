(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{425:function(s,t,a){"use strict";a.r(t);var n=a(8),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"《并发设计模式》第53章-流水线模式-统计个交易额也能这么慢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#《并发设计模式》第53章-流水线模式-统计个交易额也能这么慢"}},[s._v("#")]),s._v(" 《并发设计模式》第53章-流水线模式-统计个交易额也能这么慢？")]),s._v(" "),t("p",[s._v("作者：冰河\n"),t("br"),s._v("星球："),t("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://m6z.cn/6aeFbs"),t("OutboundLink")],1),s._v(" "),t("br"),s._v("博客："),t("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://binghe.gitcode.host"),t("OutboundLink")],1),s._v(" "),t("br"),s._v("文章汇总："),t("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://binghe.gitcode.host/md/all/all.html"),t("OutboundLink")],1),s._v(" "),t("br"),s._v("源码获取地址："),t("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://t.zsxq.com/0dhvFs5oR"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("沉淀，成长，突破，帮助他人，成就自我。")])]),s._v(" "),t("ul",[t("li",[s._v("本章难度：★★☆☆☆")]),s._v(" "),t("li",[s._v("本章重点：了解流水线模式的核心原理与使用场景，初步掌握流水线模式的应用场景，能够初步结合自身项目实际场景思考如何将流水线模式灵活应用到自身实际项目中。")])]),s._v(" "),t("p",[t("strong",[s._v("大家好，我是冰河~~")])]),s._v(" "),t("p",[s._v("在电商业务场景中，往往会存在一个秒杀业务场景，像每年的双11和618等，天猫等国内头部电商平台都会举办秒杀大促活动，在前几年的秒杀大促活动中，这些头部电商平台都会实时统计交易额并展示到交易大屏，那这些交易额是如何实时统计出来的呢？")]),s._v(" "),t("h2",{attrs:{id:"一、故事背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、故事背景"}},[s._v("#")]),s._v(" 一、故事背景")]),s._v(" "),t("p",[s._v("这天，小菜又接到一个新的需求，就是为社区电商系统增加一个实时统计交易额的功能。从业务需求的角度来看，这个功能是很简单的，就是实时统计日志中每笔订单的金额，对每笔订单的金额进行累加统计，最终得出统计的结果数据。")]),s._v(" "),t("p",[s._v("业务需求很简单，于是小菜也没想那么多，做了简单的分析后，便开始写代码实现功能，没一会儿，就写完代码提交测了。随后便收到测试同事发来的测试报告——性能太差，通不过！")]),s._v(" "),t("p",[s._v("小菜看到这个测试结果，也是一脸差异，这没啥业务难度啊？又是性能差？从代码实现角度来看没啥可调优的了啊！怎么会性能差呢？这次，让小菜排查和定位问题的话，小菜觉得代码逻辑非常简单，自己是没有办法优化代码的性能了。于是，小菜决定还是请教老王，看看老王能不能从业务和功能角度给出一些优化的建议。")]),s._v(" "),t("p",[s._v("这不问不要紧，一问还真是代码性能太差了，不过这不只是从代码角度分析的，从业务角度分析的话，其实可以使用一种新的设计模式，也就是流水线模式来优化统计性能。")]),s._v(" "),t("h2",{attrs:{id:"二、案例分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、案例分析"}},[s._v("#")]),s._v(" 二、案例分析")]),s._v(" "),t("p",[s._v("小菜所在的公司为了准备新的一年的双11，准备在社区电商系统中新增一个实时统计交易额的功能，并将实时统计的交易额展示到交易大屏。在社区电商系统中，用户每成功下单并成功支付金额后，社区电商系统就会在日志文件中输出一条日志，记录订单的编号和当前订单的金额，只要在实时统计交易额的服务中，实时获取到这些日志信息，进行累加统计，得出结果数据，再实时推送到交易大屏即可，整体流程如图53-1所示。")]),s._v(" "),t("div",{attrs:{align:"center"}},[t("img",{attrs:{src:"https://binghe.gitcode.host/assets/images/core/concurrent/2023-11-09-001.png?raw=true",width:"80%"}}),s._v(" "),t("br")]),s._v(" "),t("p",[s._v("可以看到，当用户成功下单并支付后，社区电商系统就会记录交易的日志信息，日志信息中会记录订单的编号和订单的金额。实时分析统计服务会实时收集日志并进行分析和统计，最总会将统计的结果数据实时推送到交易大屏。")]),s._v(" "),t("h2",{attrs:{id:"三、案例重现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、案例重现"}},[s._v("#")]),s._v(" 三、案例重现")]),s._v(" "),t("p",[s._v("为了更好的重现问题，这里我们模拟实现实时统计社区电商系统交易总额的功能，具体的实现步骤如下所示。")]),s._v(" "),t("p",[t("strong",[s._v("（1）实现AnalysisService接口")])]),s._v(" "),t("p",[s._v("AnalysisService接口是模拟实时分析统计交易总额的接口，定义了一个analysis()方法。")]),s._v(" "),t("p",[s._v("源码详见：io.binghe.concurrent.design.pipeline.wrong.AnalysisService。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnalysisService")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("analysis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" input"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("可以看到，在AnalysisService接口中定义了一个analysis()方法，输入一个List集合模拟输入的日志信息，返回一个Long类型的结果数据，作为统计出的结果数据。")]),s._v(" "),t("p",[t("strong",[s._v("（2）实现AnalysisServiceImpl类")])]),s._v(" "),t("p",[s._v("AnalysisServiceImpl类是AnalysisService接口的实现类，主要是实现了AnalysisService接口中定义的analysis()方法。")]),s._v(" "),t("p",[s._v("源码详见：io.binghe.concurrent.design.pipeline.wrong.AnalysisServiceImpl。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnalysisServiceImpl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AnalysisService")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("analysis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" input"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("input "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" input"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isEmpty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" input"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseLong")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("可以看到，在AnalysisServiceImpl类中实现的analysis()方法中，遍历输入的List集合，对每个元素使用横线进行分割，并将分割后的数组的第2个元素转换成Long类型，进行累加统计，最终返回统计出的结果数据。")]),s._v(" "),t("p",[s._v("由AnalysisServiceImpl类实现的analysis()方法还可以看出，日志的格式如下所示。")]),s._v(" "),t("h2",{attrs:{id:"查看全文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看全文"}},[s._v("#")]),s._v(" 查看全文")]),s._v(" "),t("p",[s._v("加入"),t("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[s._v("冰河技术"),t("OutboundLink")],1),s._v("知识星球，解锁完整技术文章与完整代码")])])}),[],!1,null,null,null);t.default=e.exports}}]);