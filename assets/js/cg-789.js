(window.webpackJsonp=window.webpackJsonp||[]).push([[789],{1122:function(s,e,a){"use strict";a.r(e);var t=a(14),r=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"《分布式im系统》环境搭建-第01节-分布式im即时通讯系统研发环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#《分布式im系统》环境搭建-第01节-分布式im即时通讯系统研发环境搭建"}},[s._v("#")]),s._v(" 《分布式IM系统》环境搭建-第01节：分布式IM即时通讯系统研发环境搭建")]),s._v(" "),e("p",[s._v("作者：冰河\n"),e("br"),s._v("星球："),e("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://m6z.cn/6aeFbs"),e("OutboundLink")],1),s._v(" "),e("br"),s._v("博客："),e("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://binghe.gitcode.host"),e("OutboundLink")],1),s._v(" "),e("br"),s._v("文章汇总："),e("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://binghe.gitcode.host/md/all/all.html"),e("OutboundLink")],1),s._v(" "),e("br"),s._v("源码获取地址："),e("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://t.zsxq.com/0dhvFs5oR"),e("OutboundLink")],1),s._v(" "),e("br"),s._v("课程视频："),e("a",{attrs:{href:"https://t.zsxq.com/14oOdmec0",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://t.zsxq.com/14oOdmec0"),e("OutboundLink")],1)]),s._v(" "),e("blockquote",[e("p",[s._v("沉淀，成长，突破，帮助他人，成就自我。")])]),s._v(" "),e("ul",[e("li",[s._v("本章难度：★★☆☆☆")]),s._v(" "),e("li",[s._v("本章重点：安装运行分布式IM即时通讯系统所需要的研发依赖环境，重点涉及到Docker环境、docker-compose环境，以及基于docker-compose一键安装分布式IM即时通讯系统所依赖的基础服务和其他中间件，包括：MySQL、Redis、RocketMQ、ElasticSearch、Logstash、Kibana、Nacos、Sentinel等。另外，项目源码中会提供基于docker-compose的开箱即用的yml脚本文件。")]),s._v(" "),e("li",[s._v("课程视频："),e("a",{attrs:{href:"https://t.zsxq.com/14oOdmec0",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://t.zsxq.com/14oOdmec0"),e("OutboundLink")],1)])]),s._v(" "),e("p",[e("strong",[s._v("大家好，我是冰河~~")])]),s._v(" "),e("p",[s._v("在充分了解了分布式IM即时通讯系统的需求、业务流程、技术流程和架构设计之后，在正式开始研发分布式IM即时通讯系统之前，还需要搭建分布式IM即时通讯系统的研发环境。")]),s._v(" "),e("p",[e("strong",[s._v("注意：本节源码的README.md文件中，已经给出了安装docker和docker-compose的命令，大家打开源码的README.md文件查看即可。")])]),s._v(" "),e("h2",{attrs:{id:"一、前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[s._v("#")]),s._v(" 一、前言")]),s._v(" "),e("p",[s._v("任何一套系统的研发和运行都是有条件的，那就是需要在特定的环境下研发或者运行，在分布式IM即时通讯系统的架构设计章节，为了进一步增强分布式IM即时通讯系统的性能、可用性和可伸缩性，我们采用容器化架构的设计方案，所以，在正式研发分布式IM即时通讯系统之前，还需要对这些研发环境进行安装和测试。")]),s._v(" "),e("h2",{attrs:{id:"二、本章诉求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、本章诉求"}},[s._v("#")]),s._v(" 二、本章诉求")]),s._v(" "),e("p",[s._v("还是那句话：磨刀不无砍柴功。在动手写代码之前，将所有要准备的工作完成，这样写起代码来才会更加顺畅。本章，会在CentOS7操作系统之上搭建Docker环境、docker-compose环境，基于docker-compose环境一键安装分布式IM即时通讯系统所依赖的数据库、基础软件和中间件环境，随后会对搭建的环境进行测试。")]),s._v(" "),e("p",[e("strong",[s._v("注意：如何安装VMWare以及安装CentOS7操作系统，小伙伴们可以参见Seckill秒杀系统的《"),e("a",{attrs:{href:"https://articles.zsxq.com/id_k0a488ltsvsc.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("第7章：秒杀系统基础环境搭建"),e("OutboundLink")],1),s._v("》，并且本节所有环境和软件的安装，都需要CentOS7能够正常联网才行，如果小伙伴们的虚拟机不能正常联网，可以参见Seckill秒杀系统的《"),e("a",{attrs:{href:"https://articles.zsxq.com/id_k0a488ltsvsc.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("第7章：秒杀系统基础环境搭建"),e("OutboundLink")],1),s._v("》一章的内容解决。")])]),s._v(" "),e("h2",{attrs:{id:"三、安装docker环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、安装docker环境"}},[s._v("#")]),s._v(" 三、安装Docker环境")]),s._v(" "),e("p",[s._v("之前安装的操作系统为CentOS7版本，所以，这里以CentOS7为例安装Docker环境，具体安装步骤如下所示。")]),s._v(" "),e("h3",{attrs:{id:"_3-1-查看操作系统内核版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-查看操作系统内核版本"}},[s._v("#")]),s._v(" 3.1 查看操作系统内核版本")]),s._v(" "),e("p",[s._v("由于Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10，所以这里先查看下安装的CentOS7操作系统的内核版本。在，命令行输入如下命令。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-srm")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("输出的结果信息如下所示。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("Linux "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v(".0-1160.el7.x86_64 x86_64\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("可以看到，内核版本是3.10，符合要求。")]),s._v(" "),e("h3",{attrs:{id:"_3-2-卸载旧版本docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-卸载旧版本docker"}},[s._v("#")]),s._v(" 3.2 卸载旧版本Docker")]),s._v(" "),e("p",[s._v("如果之前安装过旧版本的Docker，则可以执行如下命令卸载。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum remove "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine docker-ce\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-3-安装gcc环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-安装gcc环境"}},[s._v("#")]),s._v(" 3.3 安装gcc环境")]),s._v(" "),e("p",[s._v("安装gcc环境主要是为了更加顺利的安装Docker环境，在命令行分别执行如下两条命令来安装gcc环境。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc\nyum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc-c++\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"_3-4-安装yum工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-安装yum工具"}},[s._v("#")]),s._v(" 3.4 安装yum工具")]),s._v(" "),e("p",[s._v("在命令行执行如下命令安装yum工具。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" yum-utils device-mapper-persistent-data lvm2 --skip-broken\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-5-设置docker镜像仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-设置docker镜像仓库"}},[s._v("#")]),s._v(" 3.5 设置Docker镜像仓库")]),s._v(" "),e("p",[s._v("这里，我将Docker的镜像仓库设置为阿里镜像源，执行如下命令即可。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("执行如下命令将docker-ce.repo镜像仓库配置文件中的镜像源修改成阿里镜像源。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/download.docker.com/mirrors.aliyun.com\\/docker-ce/g'")]),s._v(" /etc/yum.repos.d/docker-ce.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-6-更新yum包软件索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-更新yum包软件索引"}},[s._v("#")]),s._v(" 3.6 更新yum包软件索引")]),s._v(" "),e("p",[s._v("更新yum包软件索引后，执行yum命令安装软件会快一些，在命令行执行如下命令更新yum包软件索引。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum makecache fast\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-7-安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-安装docker"}},[s._v("#")]),s._v(" 3.7 安装Docker")]),s._v(" "),e("p",[s._v("在命令行执行如下命令安装Docker。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-8-启动docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-启动docker"}},[s._v("#")]),s._v(" 3.8 启动Docker")]),s._v(" "),e("p",[s._v("在命令行执行如下命令启动Docker。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("systemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-9-设置docker开机自启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-设置docker开机自启动"}},[s._v("#")]),s._v(" 3.9 设置Docker开机自启动")]),s._v(" "),e("p",[s._v("在命令行执行如下命令设置Docker开机自启动。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3-10-查看docker版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-查看docker版本"}},[s._v("#")]),s._v(" 3.10 查看Docker版本")]),s._v(" "),e("p",[s._v("在命令行输入如下命令查看Docker版本。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" version\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("输出的结果信息如下所示。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("Client: Docker Engine - Community\n Version:           "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23.0")]),s._v(".6\n API version:       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.42")]),s._v("\n Go version:        go1.19.9\n Git commit:        ef23cbc\n Built:             Fri May  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":21:29 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2023")]),s._v("\n OS/Arch:           linux/amd64\n Context:           default\n\nServer: Docker Engine - Community\n Engine:\n  Version:          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23.0")]),s._v(".6\n  API version:      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.42")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minimum version "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  Go version:       go1.19.9\n  Git commit:       9dbdbd4\n  Built:            Fri May  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":20:38 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2023")]),s._v("\n  OS/Arch:          linux/amd64\n  Experimental:     "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n containerd:\n  Version:          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.6")]),s._v(".21\n  GitCommit:        3dce8eb055cbb6872793272b4f20ed16117344f8\n runc:\n  Version:          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v(".7\n  GitCommit:        v1.1.7-0-g860f061\n docker-init:\n  Version:          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.19")]),s._v(".0\n  GitCommit:        de40ad0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h3",{attrs:{id:"_3-11-配置镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-配置镜像加速"}},[s._v("#")]),s._v(" 3.11 配置镜像加速")]),s._v(" "),e("h2",{attrs:{id:"查看完整文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[s._v("#")]),s._v(" 查看完整文章")]),s._v(" "),e("p",[s._v("加入"),e("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("冰河技术"),e("OutboundLink")],1),s._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);e.default=r.exports}}]);