(window.webpackJsonp=window.webpackJsonp||[]).push([[760],{1061:function(t,r,e){"use strict";e.r(r);var a=e(8),s=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《高性能polaris网关》需求设计-第01节-为何要学习高性能polaris网关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《高性能polaris网关》需求设计-第01节-为何要学习高性能polaris网关"}},[t._v("#")]),t._v(" 《高性能Polaris网关》需求设计-第01节：为何要学习高性能Polaris网关")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码获取地址："),r("a",{attrs:{href:"https://t.zsxq.com/0dhvFs5oR",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://t.zsxq.com/0dhvFs5oR"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("ul",[r("li",[t._v("本章难度：★☆☆☆☆")]),t._v(" "),r("li",[t._v("本章重点：重点介绍下高性能网关的背景知识，包括：什么是API网关，大厂为何都要研发自己的API网关，技术人为何要学习高性能API网关，以及如何才能更好的学习API网关几个方面。")])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("p",[t._v("当业务发展到一定程度时，会对系统进行分布式或微服务的改造，如果不对改造后的系统进行精心的设计，就会导致对外暴露大量的API，难以统一管理和维护，一种简单的方式就是引入API网关来对这些日益剧增的API进行统一管理和维护。")]),t._v(" "),r("h2",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("p",[t._v("随着互联网的发展，互联网企业的业务也在飞速发展，进而促使系统的架构也在不断的变化。总体来说，系统的架构大致经历了：单体应用架构—垂直应用架构—分布式架构—SOA架构—微服务架构的演变。当然，很多互联网企业的系统架构已经向Service Mesh(服务化网格)演变。")]),t._v(" "),r("p",[t._v("随着微服务化的不断普及，线上应用越来越多，并且各个应用都需要对外暴露自身的API接口，这就会导致对外暴露大量的API接口，难以统一管理和维护，并且客户端需要明确知晓各个微服务的具体访问地址，这无疑又增加了客户端开发的复杂度。此时，如果设计和研发一套高性能的API网关服务，由API网关服务统一作为后端微服务的流量入口，客户端只需要访问API网关，不需要关心后端微服务的具体访问地址，只需要将请求发送给API网关，由API网关统一转发即可。")]),t._v(" "),r("h2",{attrs:{id:"二、什么是api网关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、什么是api网关"}},[t._v("#")]),t._v(" 二、什么是API网关")]),t._v(" "),r("p",[t._v("API网关是一种用于管理、控制和保护API（应用程序编程接口）的中间层服务。它位于客户端和后端服务之间，充当了一个统一的入口点，处理所有进出系统的请求，总体来说，API网关提供了如下功能。")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://binghe.gitcode.host/images/project/gateway/2024-06-02-001.png?raw=true",width:"70%"}}),t._v(" "),r("br")]),t._v(" "),r("p",[t._v("可以看到，API网关总体上会支持如下功能。")]),t._v(" "),r("p",[r("strong",[t._v("（1）路由和转发")])]),t._v(" "),r("p",[t._v("接收来自客户端的请求，并根据预定义的路由规则将请求转发到相应的后端服务或微服务。这种路由功能可以基于请求的路径、方法、头部信息等进行配置。")]),t._v(" "),r("p",[r("strong",[t._v("（2）协议转换")])]),t._v(" "),r("p",[t._v("将来自客户端的请求从一种协议转换为另一种协议，例如将HTTP请求转换为HTTPS请求，或者将REST请求转换为SOAP请求，将HTTP请求转换成RPC或者WebSocket请求等。")]),t._v(" "),r("p",[r("strong",[t._v("（3）请求和响应转换")])]),t._v(" "),r("p",[t._v("对请求和响应的内容进行转换，例如修改请求和响应的头部信息、参数重命名、请求体的转换、响应体的格式化等。")]),t._v(" "),r("p",[r("strong",[t._v("（4）安全认证和授权")])]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"https://public.zsxq.com/groups/48848484411888.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章、小册、视频与完整代码")])])}),[],!1,null,null,null);r.default=s.exports}}]);