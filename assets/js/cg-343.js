(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{643:function(t,r,e){"use strict";e.r(r);var n=e(8),_=Object(n.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"《spring核心技术》第26章-深度解析调用通知方法的流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#《spring核心技术》第26章-深度解析调用通知方法的流程"}},[t._v("#")]),t._v(" 《Spring核心技术》第26章：深度解析调用通知方法的流程")]),t._v(" "),r("p",[t._v("作者：冰河\n"),r("br"),t._v("星球："),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://m6z.cn/6aeFbs"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("博客："),r("a",{attrs:{href:"https://binghe.gitcode.host",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("文章汇总："),r("a",{attrs:{href:"https://binghe.gitcode.host/md/all/all.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://binghe.gitcode.host/md/all/all.html"),r("OutboundLink")],1),t._v(" "),r("br"),t._v("源码地址："),r("a",{attrs:{href:"https://github.com/binghe001/spring-annotation-book/tree/master/spring-annotation-chapter-22",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/binghe001/spring-annotation-book/tree/master/spring-annotation-chapter-22"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("沉淀，成长，突破，帮助他人，成就自我。")])]),t._v(" "),r("p",[r("strong",[t._v("大家好，我是冰河~~")])]),t._v(" "),r("hr"),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("本章难度")]),t._v("：★★★★☆")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("本章重点")]),t._v("：从源码级别彻底理解Spring底层调用通知方法的执行流程。")])])]),t._v(" "),r("p",[t._v("本章目录如下所示：")]),t._v(" "),r("ul",[r("li",[t._v("学习指引")]),t._v(" "),r("li",[t._v("通知顺序")]),t._v(" "),r("li",[t._v("源码时序图")]),t._v(" "),r("li",[t._v("源码解析")]),t._v(" "),r("li",[t._v("总结")]),t._v(" "),r("li",[t._v("思考")]),t._v(" "),r("li",[t._v("VIP服务")])]),t._v(" "),r("h2",{attrs:{id:"一、学习指引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、学习指引"}},[t._v("#")]),t._v(" 一、学习指引")]),t._v(" "),r("p",[r("code",[t._v("Spring调用通知方法的流程，你真的彻底了解过吗？")])]),t._v(" "),r("p",[t._v("在前面的文章中，深度解析了Spring构建AOP拦截器的执行流程，通过创建Bean构建增强器链和初始化Bean之后执行后置处理器构建拦截器链两个流程的分析，构建的拦截器链最终会存入AdvisedSupport类中的ArrayList类型的成员变量advisors中。后续在调用方法执行AOP切面通知方法时，就会执行拦截器链中的拦截器，按照一定的顺序执行AOP通知方法。")]),t._v(" "),r("h2",{attrs:{id:"二、通知顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、通知顺序"}},[t._v("#")]),t._v(" 二、通知顺序")]),t._v(" "),r("p",[r("code",[t._v("通知方法的执行顺序，你了解过吗？")])]),t._v(" "),r("p",[t._v("不同的Spring版本的通知顺序是不同的，这里，主要给出Spring4与Spring5和Spring6之间的差异。")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("调用顺序")]),t._v(" "),r("th",[t._v("Spring4")]),t._v(" "),r("th",[t._v("Spring5")]),t._v(" "),r("th",[t._v("Spring6")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("1")]),t._v(" "),r("td",[t._v("@Around环绕通知之前")]),t._v(" "),r("td",[t._v("@Around环绕通知之前")]),t._v(" "),r("td",[t._v("@Around环绕通知之前")])]),t._v(" "),r("tr",[r("td",[t._v("2")]),t._v(" "),r("td",[t._v("@Before前置通知")]),t._v(" "),r("td",[t._v("@Before前置通知")]),t._v(" "),r("td",[t._v("@Before前置通知")])]),t._v(" "),r("tr",[r("td",[t._v("3")]),t._v(" "),r("td",[t._v("@Around环绕通知之后")]),t._v(" "),r("td",[t._v("@AfterReturning/@AfterThrowing")]),t._v(" "),r("td",[t._v("@AfterReturning/@AfterThrowing")])]),t._v(" "),r("tr",[r("td",[t._v("4")]),t._v(" "),r("td",[t._v("@After后置通知")]),t._v(" "),r("td",[t._v("@After后置通知")]),t._v(" "),r("td",[t._v("@After后置通知")])]),t._v(" "),r("tr",[r("td",[t._v("5")]),t._v(" "),r("td",[t._v("@AfterReturning/@AfterThrowing")]),t._v(" "),r("td",[t._v("@Around环绕通知之后")]),t._v(" "),r("td",[t._v("@Around环绕通知之后")])])])]),t._v(" "),r("p",[t._v("可以看到，Spring4与Spring5和Spring6的执行顺序是不同的。")]),t._v(" "),r("p",[t._v("（1）Spring4中@After在@AfterReturning/@AfterThrowing的前面，并且@Around会将@Before包裹起来。")]),t._v(" "),r("p",[t._v("（2）Spring5和Spring6中@After在@AfterReturning/@AfterThrowing的后面，并且@Around会将@Before、@AfterReturning/@AfterThrowing和@After包裹起来。")]),t._v(" "),r("h2",{attrs:{id:"三、源码时序图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、源码时序图"}},[t._v("#")]),t._v(" 三、源码时序图")]),t._v(" "),r("p",[r("code",[t._v("结合时序图理解源码会事半功倍，你觉得呢？")])]),t._v(" "),r("p",[t._v("本节，就详细分析下Spring底层调用通知方法的源码时序图。Spring底层调用通知方法的源码时序图如图26-1~26-2所示。")]),t._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"图26-1","data-src":"https://binghe.gitcode.host/assets/images/frame/spring/ioc/spring-core-2023-03-23-01.png",loading:"lazy"}})]),t._v(" "),r("h2",{attrs:{id:"查看完整文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看完整文章"}},[t._v("#")]),t._v(" 查看完整文章")]),t._v(" "),r("p",[t._v("加入"),r("a",{attrs:{href:"http://m6z.cn/6aeFbs",target:"_blank",rel:"noopener noreferrer"}},[t._v("冰河技术"),r("OutboundLink")],1),t._v("知识星球，解锁完整技术文章与完整代码")])])}),[],!1,null,null,null);r.default=_.exports}}]);